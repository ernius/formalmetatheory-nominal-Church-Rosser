This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Debian) (format=pdflatex 2015.4.11)  13 MAR 2016 22:35
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**\input Parallel.tex
(./Parallel.tex
(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrartcl.cls
Document Class: scrartcl 2013/12/19 v3.12 KOMA-Script document class (article)
(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrkbase.sty
Package: scrkbase 2013/12/19 v3.12 KOMA-Script package (KOMA-Script-dependent b
asics and keyval usage)

(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrbase.sty
Package: scrbase 2013/12/19 v3.12 KOMA-Script package (KOMA-Script-independent 
basics and keyval usage)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks14
)
(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrlfile.sty
Package: scrlfile 2013/12/19 v3.12 KOMA-Script package (loading files)

Package scrlfile, 2013/12/19 v3.12 KOMA-Script package (loading files)
                  Copyright (C) Markus Kohm

))) (/usr/share/texlive/texmf-dist/tex/latex/koma-script/tocbasic.sty
Package: tocbasic 2013/12/19 v3.12 KOMA-Script package (handling toc-files)
)
Package tocbasic Info: omitting babel extension for `toc'
(tocbasic)             because of feature `nobabel' available
(tocbasic)             for `toc' on input line 115.
Package tocbasic Info: omitting babel extension for `lof'
(tocbasic)             because of feature `nobabel' available
(tocbasic)             for `lof' on input line 116.
Package tocbasic Info: omitting babel extension for `lot'
(tocbasic)             because of feature `nobabel' available
(tocbasic)             for `lot' on input line 117.
Class scrartcl Info: File `scrsize11pt.clo' used instead of
(scrartcl)           file `scrsize11.clo' to setup font sizes on input line 153
1.

(/usr/share/texlive/texmf-dist/tex/latex/koma-script/scrsize11pt.clo
File: scrsize11pt.clo 2013/12/19 v3.12 KOMA-Script font size class option (11pt
)
)
(/usr/share/texlive/texmf-dist/tex/latex/koma-script/typearea.sty
Package: typearea 2013/12/19 v3.12 KOMA-Script package (type area)

Package typearea, 2013/12/19 v3.12 KOMA-Script package (type area)
                  Copyright (C) Frank Neukam, 1992-1994
                  Copyright (C) Markus Kohm, 1994-

\ta@bcor=\skip41
\ta@div=\count79
\ta@hblk=\skip42
\ta@vblk=\skip43
\ta@temp=\skip44
\footheight=\skip45
Package typearea Info: These are the values describing the layout:
(typearea)             DIV  = 10
(typearea)             BCOR = 0.0pt
(typearea)             \paperwidth      = 597.50793pt
(typearea)              \textwidth      = 418.25555pt
(typearea)              DIV departure   = -6%
(typearea)              \evensidemargin = 17.3562pt
(typearea)              \oddsidemargin  = 17.3562pt
(typearea)             \paperheight     = 845.04694pt
(typearea)              \textheight     = 595.80026pt
(typearea)              \topmargin      = -25.16531pt
(typearea)              \headheight     = 17.0pt
(typearea)              \headsep        = 20.40001pt
(typearea)              \topskip        = 11.0pt
(typearea)              \footskip       = 47.6pt
(typearea)              \baselineskip   = 13.6pt
(typearea)              on input line 1330.
)
\c@part=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\abovecaptionskip=\skip46
\belowcaptionskip=\skip47
\c@pti@nb@sid@b@x=\box26
\c@figure=\count86
\c@table=\count87
\bibindent=\dimen102
) (/usr/share/texlive/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01

(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0
\@emptytoks=\toks15
\ex@=\dimen103
))
(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amssymb.sty
Package: amssymb 2013/01/14 v3.01 AMS font symbols

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/amsfonts.sty
Package: amsfonts 2013/01/14 v3.01 Basic AMSFonts support
\symAMSa=\mathgroup4
\symAMSb=\mathgroup5
LaTeX Font Info:    Overwriting math alphabet `\mathfrak' in version `bold'
(Font)                  U/euf/m/n --> U/euf/b/n on input line 106.
))
(/usr/share/texlive/texmf-dist/tex/latex/stmaryrd/stmaryrd.sty
Package: stmaryrd 1994/03/03 St Mary's Road symbol package
\symstmry=\mathgroup6
LaTeX Font Info:    Overwriting symbol font `stmry' in version `bold'
(Font)                  U/stmry/m/n --> U/stmry/b/n on input line 89.
)
(/usr/share/texmf/tex/latex/polytable/polytable.sty
Package: polytable 2009/11/01 v0.8.4 `polytable' package (Andres Loeh)

(/usr/share/texmf/tex/latex/polytable/lazylist.sty)
(/usr/share/texlive/texmf-dist/tex/latex/tools/array.sty
Package: array 2008/09/09 v2.4c Tabular extension package (FMi)
\col@sep=\dimen104
\extrarowheight=\dimen105
\NC@list=\toks16
\extratabsurround=\skip48
\backup@length=\skip49
)
\PT@colwidth=\dimen106
\PT@cols=\count88
\PT@table=\count89
\PT@toks=\toks17
\PT@in=\read1
\PT@out=\write3
)
\mathindent=\dimen107
\blanklineskip=\skip50

(/usr/share/texlive/texmf-dist/tex/latex/tools/calc.sty
Package: calc 2007/08/22 v4.3 Infix arithmetic (KKT,FJ)
\calc@Acount=\count90
\calc@Bcount=\count91
\calc@Adimen=\dimen108
\calc@Bdimen=\dimen109
\calc@Askip=\skip51
\calc@Bskip=\skip52
LaTeX Info: Redefining \setlength on input line 76.
LaTeX Info: Redefining \addtolength on input line 77.
\calc@Ccount=\count92
\calc@Cskip=\skip53
)
(/usr/share/texlive/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2005/09/27 v1.99g Standard LaTeX package

(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 43.
))
(/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2008/03/30 v1.1d Input encoding file
\inpenc@prehook=\toks18
\inpenc@posthook=\toks19

(/usr/share/texlive/texmf-dist/tex/latex/ucs/utf8x.def
File: utf8x.def 2004/10/17 UCS: Input encoding UTF-8
))
(/usr/share/texlive/texmf-dist/tex/latex/ucs/ucs.sty
Package: ucs 2013/05/11 v2.2 UCS: Unicode input support

(/usr/share/texlive/texmf-dist/tex/latex/ucs/data/uni-global.def
File: uni-global.def 2013/05/13 UCS: Unicode global data
)
\uc@secondtry=\count93
\uc@combtoks=\toks20
\uc@combtoksb=\toks21
\uc@temptokena=\toks22
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2013/01/14 v2.14 AMS math features
\@mathmargin=\skip54

For additional information on amsmath, use the `?' option.
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d
\pmbraise@=\dimen110
)
(/usr/share/texlive/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count94
LaTeX Info: Redefining \frac on input line 210.
\uproot@=\count95
\leftroot@=\count96
LaTeX Info: Redefining \overline on input line 306.
\classnum@=\count97
\DOTSCASE@=\count98
LaTeX Info: Redefining \ldots on input line 378.
LaTeX Info: Redefining \dots on input line 381.
LaTeX Info: Redefining \cdots on input line 466.
\Mathstrutbox@=\box27
\strutbox@=\box28
\big@size=\dimen111
LaTeX Font Info:    Redeclaring font encoding OML on input line 566.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 567.
\macc@depth=\count99
\c@MaxMatrixCols=\count100
\dotsspace@=\muskip10
\c@parentequation=\count101
\dspbrk@lvl=\count102
\tag@help=\toks23
\row@=\count103
\column@=\count104
\maxfields@=\count105
\andhelp@=\toks24
\eqnshift@=\dimen112
\alignsep@=\dimen113
\tagshift@=\dimen114
\tagwidth@=\dimen115
\totwidth@=\dimen116
\lineht@=\dimen117
\@envbody=\toks25
\multlinegap=\skip55
\multlinetaggap=\skip56
\mathdisplay@stack=\toks26
LaTeX Info: Redefining \[ on input line 2665.
LaTeX Info: Redefining \] on input line 2666.
)
(/usr/share/texlive/texmf-dist/tex/latex/mh/mathtools.sty
Package: mathtools 2013/02/12 v1.13 mathematical typesetting tools

(/usr/share/texlive/texmf-dist/tex/latex/mh/mhsetup.sty
Package: mhsetup 2010/01/21 v1.2a programming setup (MH)
)
LaTeX Info: Thecontrolsequence`\['isalreadyrobust on input line 129.
LaTeX Info: Thecontrolsequence`\]'isalreadyrobust on input line 129.
\g_MT_multlinerow_int=\count106
\l_MT_multwidth_dim=\dimen118
\origjot=\skip57
\l_MT_shortvdotswithinadjustabove_dim=\dimen119
\l_MT_shortvdotswithinadjustbelow_dim=\dimen120
\l_MT_above_intertext_sep=\dimen121
\l_MT_below_intertext_sep=\dimen122
\l_MT_above_shortintertext_sep=\dimen123
\l_MT_below_shortintertext_sep=\dimen124
)
(/usr/share/texlive/texmf-dist/tex/latex/textgreek/textgreek.sty
Package: textgreek 2011/10/09 v0.7 Greek symbols in text
Package textgreek Info: Loading the definitions for the Greek fontencoding. on 
input line 39.

(/usr/share/texlive/texmf-dist/tex/latex/greek-fontenc/lgrenc.def
File: lgrenc.def 2013/07/16 v0.9 LGR Greek font encoding definitions

(/usr/share/texlive/texmf-dist/tex/latex/greek-fontenc/greek-fontenc.def
File: greek-fontenc.def 2013/11/28 v0.11 Common Greek font encoding definitions

))
Package textgreek Info: Loaded fontmap: {eur/*/*}{U/eur/*/*} {phv/*/*}{U/psy/*/
*}. on input line 69.
)
(/usr/share/texlive/texmf-dist/tex/latex/catchfilebetweentags/catchfilebetweent
ags.sty
Package: catchfilebetweentags 2011/02/19 v1.1 - Catch file between tags (FC)
 (/usr/share/texlive/texmf-dist/tex/latex/etex-pkg/etex.sty
Package: etex 1998/03/26 v2.0 eTeX basic definition package (PEB)
\et@xins=\count107
)
(/usr/share/texlive/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2011/01/03 v2.1 e-TeX tools for LaTeX
\etb@tempcnta=\count108
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/catchfile.sty
Package: catchfile 2011/03/01 v1.6 Catch the contents of a file (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/etexcmds.sty
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifluatex.sty
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
))
\CatchFBT@tok=\toks256
)
(/usr/share/texmf/tex/latex/tipa/tipa.sty
Package: tipa 2002/08/08 TIPA version 1.1

(/usr/share/texlive/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2005/09/27 v1.99g Standard LaTeX package

(/usr/share/texmf/tex/latex/tipa/t3enc.def
File: t3enc.def 2001/12/31 T3 encoding
LaTeX Font Info:    Try loading font information for T1+cmss on input line 357.


(/usr/share/texlive/texmf-dist/tex/latex/base/t1cmss.fd
File: t1cmss.fd 1999/05/25 v2.5h Standard LaTeX font definitions
))
(/usr/share/texlive/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 43.
)))
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)

(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
)
(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 91.

(/usr/share/texlive/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX
\Gread@gobject=\count109
))
\Gin@req@height=\dimen125
\Gin@req@width=\dimen126
)
(/usr/share/texlive/texmf-dist/tex/latex/bussproofs/bussproofs.sty
Proof Tree (bussproofs) style macros. Version 1.1.
\theLevel=\count110
\myMaxLevel=\count111
\myBoxA=\box29
\myBoxB=\box30
\myBoxC=\box31
\myBoxD=\box32
\myBoxLL=\box33
\myBoxRL=\box34
\thisAboveSkip=\dimen127
\thisBelowSkip=\dimen128
\newScoreStart=\dimen129
\newScoreEnd=\dimen130
\newCenter=\dimen131
\displace=\dimen132
\leftLowerAmt=\dimen133
\rightLowerAmt=\dimen134
\scoreHeight=\dimen135
\scoreDepth=\dimen136
\htLbox=\dimen137
\htRbox=\dimen138
\htRRbox=\dimen139
\htRRRbox=\dimen140
\htAbox=\dimen141
\htCbox=\dimen142
) (./Parallel.aux)
\openout1 = `Parallel.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 304.
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 304.
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 304.
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 304.
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 304.
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 304.
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for LGR/cmr/m/n on input line 304.
LaTeX Font Info:    Try loading font information for LGR+cmr on input line 304.


(/usr/share/texlive/texmf-dist/tex/latex/cbfonts-fd/lgrcmr.fd
File: lgrcmr.fd 2013/09/01 v1.0 Greek European Computer Regular
)
LaTeX Font Info:    ... okay on input line 304.
LaTeX Font Info:    Checking defaults for T3/cmr/m/n on input line 304.
LaTeX Font Info:    Try loading font information for T3+cmr on input line 304.

(/usr/share/texmf/tex/latex/tipa/t3cmr.fd
File: t3cmr.fd 2001/12/31 TIPA font definitions
)
LaTeX Font Info:    ... okay on input line 304.

(/usr/share/texlive/texmf-dist/tex/latex/ucs/ucsencs.def
File: ucsencs.def 2011/01/21 Fixes to fontencodings LGR, T3
LGR\textpentedeka already defined.
LGR\textpenteqilioi already defined.
LGR\textpentemuria already defined.
LGR\textstigma already defined.
LGR\textqoppa already defined.
LGR\texteuro already defined.
LGR\textperthousand already defined.
LGR\textquoteleft already defined.
LGR\textquoteright already defined.
LGR\u already defined.
LGR\= already defined.
LGR\" already defined.
LGR\textpercent already defined.
LGR\textperiodcentered already defined.
LGR\' already defined.
LGR\textanoteleia already defined.
LGR\textAlpha already defined.
LGR\textBeta already defined.
LGR\textDelta already defined.
LGR\textEpsilon already defined.
LGR\textPhi already defined.
LGR\textGamma already defined.
LGR\textEta already defined.
LGR\textIota already defined.
LGR\textTheta already defined.
LGR\textKappa already defined.
LGR\textLambda already defined.
LGR\textMu already defined.
LGR\textNu already defined.
LGR\textOmicron already defined.
LGR\textPi already defined.
LGR\textChi already defined.
LGR\textRho already defined.
LGR\textSigma already defined.
LGR\textTau already defined.
LGR\textUpsilon already defined.
LGR\textOmega already defined.
LGR\textXi already defined.
LGR\textPsi already defined.
LGR\textZeta already defined.
LGR\` already defined.
LGR\textalpha already defined.
LGR\textbeta already defined.
LGR\textvarsigma already defined.
LGR\textdelta already defined.
LGR\textepsilon already defined.
LGR\textphi already defined.
LGR\textgamma already defined.
LGR\texteta already defined.
LGR\textiota already defined.
LGR\texttheta already defined.
LGR\textkappa already defined.
LGR\textlambda already defined.
LGR\textmu already defined.
LGR\textnu already defined.
LGR\textomicron already defined.
LGR\textpi already defined.
LGR\textchi already defined.
LGR\textrho already defined.
LGR\textautosigma already defined.
LGR\textsigma already defined.
LGR\texttau already defined.
LGR\textupsilon already defined.
LGR\textomega already defined.
LGR\textxi already defined.
LGR\textpsi already defined.
LGR\textzeta already defined.
LGR\guillemotleft already defined.
LGR\guillemotright already defined.
LGR\~ already defined.
LGR\textemdash already defined.
LGR\textdigamma already defined.
LGR\textDigamma already defined.
LGR\textdexiakeraia already defined.
LGR\textaristerikeraia already defined.

fontencoding LGR patched
T3\textscriptg already defined.
fontencoding T3 patched
) (/usr/share/texlive/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count112
\scratchdimen=\dimen143
\scratchbox=\box35
\nofMPsegments=\count113
\nofMParguments=\count114
\everyMPshowfont=\toks27
\MPscratchCnt=\count115
\MPscratchDim=\dimen144
\MPnumerator=\count116
\makeMPintoPDFobject=\count117
\everyMPtoPDFconversion=\toks28
) (/usr/share/texlive/texmf-dist/tex/generic/oberdiek/pdftexcmds.sty
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/ifpdf.sty
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
)
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/kvdefinekeys.sty
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
))
(/usr/share/texlive/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)

(/usr/share/texlive/texmf-dist/tex/generic/oberdiek/kvsetkeys.sty
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
))
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
\openout3 = `Parallel.ptb'.

LaTeX Font Info:    Try loading font information for U+msa on input line 363.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsa.fd
File: umsa.fd 2013/01/14 v3.01 AMS symbols A
)
LaTeX Font Info:    Try loading font information for U+msb on input line 363.

(/usr/share/texlive/texmf-dist/tex/latex/amsfonts/umsb.fd
File: umsb.fd 2013/01/14 v3.01 AMS symbols B
)
LaTeX Font Info:    Try loading font information for U+stmry on input line 363.


(/usr/share/texlive/texmf-dist/tex/latex/stmaryrd/Ustmry.fd)

LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

./Parallel.tex:363: Missing $ inserted.
<inserted text> 
                $
l.363 \end{hscode}
                  \resethooks
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

./Parallel.tex:363: Missing } inserted.
<inserted text> 
                }
l.363 \end{hscode}
                  \resethooks
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

./Parallel.tex:363: Extra }, or forgotten \endgroup.
<recently read> }
                 
l.363 \end{hscode}
                  \resethooks
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

./Parallel.tex:363: Argument of \Conid has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Conid was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


./Parallel.tex:363: LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.363 \end{hscode}
                  \resethooks
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.


LaTeX Warning: Command \; invalid in math mode on input line 363.


LaTeX Warning: Command \; invalid in math mode on input line 363.

./Parallel.tex:363: Argument of \Keyword has an extra }.
<inserted text> 
                \par 
l.363 \end{hscode}
                  \resethooks
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
./Parallel.tex:363: Paragraph ended before \Keyword was complete.
<to be read again> 
                   \par 
l.363 \end{hscode}
                  \resethooks
(That makes 100 errors; please try again.) 
Here is how much of TeX's memory you used:
 7702 strings out of 494893
 116348 string characters out of 6177977
 206904 words of memory out of 5000000
 10775 multiletter control sequences out of 15000+600000
 20089 words of font info for 50 fonts, out of 8000000 for 9000
 85 hyphenation exceptions out of 8191
 40i,6n,38p,824b,178s stack positions out of 5000i,500n,10000p,200000b,80000s

./Parallel.tex:363:  ==> Fatal error occurred, no output PDF file produced!
